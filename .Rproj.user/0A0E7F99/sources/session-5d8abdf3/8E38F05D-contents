# n: number of observations
# p: number of scalar predictors
# M: number of basis functions for each functional predictors

setClass(
  "predictor_hybrid",
  representation(
    # scalar predictors:
    ## n x p matrix of real-valued covariates.
    ## each row represents an observed finite-dimensional vector.
    Z = "matrix",

    # functional predictors
    ## basis expansion representation
    ## number of predictors can be arbitrary
    functional_predictors = "list",
    n_functional_predictors = "numeric"
  ))

create_hybrid_predictors_kidney <- function(Z, functional_predictor_1, functional_predictor_2){
if(
  !(
    class(functional_predictor_1)[1] == "predictor_functional"
    ) & (
      class(functional_predictor_2)[1] == "predictor_functional"
      )
){
  stop("Inputs should be functional predictor objects")
}else{
  predictor_object <- new("predictor_hybrid",
                          Z = Z,
                          functional_predictors = list(
                            functional_predictor_1,
                            functional_predictor_2
                            ),
                          n_functional_predictors = 2
                          )
  return(predictor_object)
  }
}
