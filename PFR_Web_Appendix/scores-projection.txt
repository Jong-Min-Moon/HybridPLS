model{	for(i in 1:M) {		for(j in 1:J) { 			###	specify the distribution for the projection of each function on level 1 eigenfunction space			for(k in 1:kz1) {				mu1[i,j,k] <- s1[i,k] + 					mc[k,1] * s2[i,j,1] + mc[k,2] * s2[i,j,2] + mc[k,3] * s2[i,j,3]				a[i*J-J+j,k] ~ dnorm(mu1[i,j,k], tau) 			}			###	specify the distribution for the projection of each function on level 2 eigenfunction space			for(k in 1:kz2) {				mu2[i,j,k] <- mc[1,k] * s1[i,1] + mc[2,k] * s1[i,2] + mc[3,k] * s1[i,3] + mc[4,k] * s1[i,4] + 
						mc[5,k] * s1[i,5] + mc[6,k] * s1[i,6] + mc[7,k] * s1[i,7] + mc[8,k] * s1[i,8] + 
						mc[9,k] * s1[i,9] + mc[10,k] * s1[i,10] +								   s2[i,j,k]				b[i*J-J+j,k] ~ dnorm(mu2[i,j,k], tau) 			}					}	}	###	Specify the distribution for the principal component scores		for(i in 1:M) {		for(k in 1:kz1) {			s1[i,k] ~ dnorm(0, tau1[k])		}		for(j in 1:J) {			for(k in 1:kz2) {				s2[i,j,k] ~ dnorm(0, tau2[k])			}		}	} 		###	Specify priors for measurement error variance (inverse gamma prior)	tau ~ dgamma(0.000001, 0.000001)	sigma <- 1/sqrt(tau)}